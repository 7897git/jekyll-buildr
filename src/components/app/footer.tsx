'use client';

import { Github, Sparkles, GitPullRequestCreate } from 'lucide-react';
import { Button } from '@/components/ui/button';
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogFooter,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
} from '@/components/ui/dialog';
import * as React from 'react';
import { Label } from '../ui/label';
import { Input } from '../ui/input';
import { Textarea } from '../ui/textarea';

const GradientButton = React.forwardRef<
  HTMLButtonElement,
  React.ComponentProps<typeof Button>
>(({ children, className, ...props }, ref) => (
  <Button
    ref={ref}
    className="bg-gradient-to-r from-accent to-primary text-primary-foreground hover:opacity-90 transition-opacity"
    {...props}
  >
    {children}
  </Button>
));
GradientButton.displayName = 'GradientButton';

type AppFooterProps = {
    onPublish?: () => void;
    onPullRequest?: (details: { title: string, body: string }) => void;
    isPublishing: boolean;
    isCreatingPr: boolean;
};

export function AppFooter({ onPublish, onPullRequest, isPublishing = false, isCreatingPr = false }: AppFooterProps) {
  const [prDialogOpen, setPrDialogOpen] = React.useState(false);
  const [prTitle, setPrTitle] = React.useState('Jekyll Flow Updates');
  const [prBody, setPrBody] = React.useState('This pull request was automatically generated by Jekyll Flow.');

  const handleCreatePr = () => {
    if (onPullRequest) {
      onPullRequest({ title: prTitle, body: prBody });
      // The parent component will be responsible for closing the dialog upon success
    }
  };

  return (
    <footer className="flex h-14 shrink-0 items-center justify-between md:justify-end md:gap-2 border-t px-4 lg:px-6">
      {onPullRequest && (
        <Dialog open={prDialogOpen} onOpenChange={setPrDialogOpen}>
          <DialogTrigger asChild>
            <Button variant="outline" disabled={isCreatingPr || isPublishing}>
              <GitPullRequestCreate className="mr-2" />
              {isCreatingPr ? 'Creating PR...' : 'Create Pull Request'}
            </Button>
          </DialogTrigger>
          <DialogContent className="sm:max-w-[400px]">
            <DialogHeader>
              <DialogTitle>Create Pull Request</DialogTitle>
              <DialogDescription>
                Review your changes and create a pull request to merge them into your main branch.
              </DialogDescription>
            </DialogHeader>
            <div className="grid gap-4 py-4">
              <div className="grid grid-rows items-center gap-4">
                <Label htmlFor="pr-title" className="text-left">
                  Title
                </Label>
                <Input
                  id="pr-title"
                  value={prTitle}
                  onChange={(e) => setPrTitle(e.target.value)}
                  className="col-span-3"
                />
              </div>
              <div className="grid grid-rows items-start gap-4">
                <Label htmlFor="pr-body" className="text-left mt-2">
                  Description
                </Label>
                <Textarea
                  id="pr-body"
                  value={prBody}
                  onChange={(e) => setPrBody(e.target.value)}
                  className="col-span-3"
                  rows={4}
                />
              </div>
            </div>
            <DialogFooter>
              <Button onClick={handleCreatePr} disabled={isCreatingPr || !prTitle}>
                {isCreatingPr && <Sparkles className="mr-2 h-4 w-4 animate-pulse" />}
                Pull Request
              </Button>
            </DialogFooter>
          </DialogContent>
        </Dialog>
      )}

      {onPublish && (
        <GradientButton onClick={onPublish} disabled={isPublishing || isCreatingPr}>
            {isPublishing ? (
            <>
                <Sparkles className="mr-2 h-4 w-4 animate-pulse" />
                Publishing...
            </>
            ) : (
            <>
                <Github className="mr-2" />
                Push to GitHub
            </>
            )}
        </GradientButton>
      )}
    </footer>
  );
}
